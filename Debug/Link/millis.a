;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned int time_count = 0;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0003 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0007 time_count++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0003 0008 TCNT1H = 0xE0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0003 0009 TCNT1L = 0xBF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0003 000A }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;void timer1_init()
; 0003 000D {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0003 000E // Thiet lap Timer1 che do Normal dem len
; 0003 000F TCCR1B = 0x01; // CS10=1, CS12=0 (prescaler 1)
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0003 0010 TCNT1H = 0xE0; // Chu ki dem 1ms
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0003 0011 TCNT1L = 0xBF;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0003 0012 TIMSK = (1 << TOIE1); // Cho phép ngat khi timer1 tràn
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0003 0013 }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;unsigned int millis()
; 0003 0017 {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0003 0018 unsigned int millis_return;
; 0003 0019 // Tat ngat de dam bao tinh dong nhat khi do giá tri
; 0003 001A #asm("cli")
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;	millis_return -> R16,R17
;PCODE: $00000029 VOL: 0
; 0003 001B millis_return = time_count;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0003 001C #asm("sei")
;PCODE: $0000002C VOL: 0
; 0003 001D return millis_return;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0003 001E }
;PCODE: $00000030 VOL: 0
;void millis_setup()
; 0003 0022 {
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0003 0023 timer1_init(); // Khoi tao timer1
;PCODE: $00000033 VOL: 0
; 0003 0024 #asm("sei"); // Bat ngat toàn cuc
;PCODE: $00000034 VOL: 0
; 0003 0025 }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
