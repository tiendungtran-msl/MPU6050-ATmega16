;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;float Acc_x, Acc_y, Acc_z, Temperature, Gyro_x, Gyro_y, Gyro_z;
;void Gyro_Init()                /* Gyro initialization function */
; 0003 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0007 delay_ms(150);              /* Power up time >100ms */
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0003 0008 I2C_Start_Wait(0xD0);       /* Start with device write address */
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0003 0009 I2C_Write(SMPLRT_DIV);      /* Write to sample rate register */
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0003 000A I2C_Write(0x07);            /* 1KHz sample rate */
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0003 000B I2C_Stop();
;PCODE: $00000018 VOL: 0
; 0003 000C 
; 0003 000D I2C_Start_Wait(0xD0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0003 000E I2C_Write(PWR_MGMT_1);      /* Write to power management register */
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0003 000F I2C_Write(0x01);            /* X axis gyroscope reference frequency */
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0003 0010 I2C_Stop();
;PCODE: $0000001F VOL: 0
; 0003 0011 
; 0003 0012 I2C_Start_Wait(0xD0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0003 0013 I2C_Write(CONFIG);          /* Write to Configuration register */
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0003 0014 I2C_Write(0x00);            /* Fs = 8KHz */
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0003 0015 I2C_Stop();
;PCODE: $00000026 VOL: 0
; 0003 0016 
; 0003 0017 I2C_Start_Wait(0xD0);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0003 0018 I2C_Write(GYRO_CONFIG);     /* Write to Gyro configuration register */
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0003 0019 I2C_Write(0x18);            /* Full scale range +/- 2000 degree/C */
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0003 001A I2C_Stop();
;PCODE: $0000002D VOL: 0
; 0003 001B 
; 0003 001C I2C_Start_Wait(0xD0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0003 001D I2C_Write(INT_ENABLE);      /* Write to interrupt enable register */
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0003 001E I2C_Write(0x01);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0003 001F I2C_Stop();
;PCODE: $00000034 VOL: 0
; 0003 0020 }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;void MPU_Start_Loc()
; 0003 0023 {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0003 0024 I2C_Start_Wait(0xD0);        /* I2C start with device write address */
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0003 0025 I2C_Write(ACCEL_XOUT_H);     /* Write start location address from where to read  ...
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0003 0026 I2C_Repeated_Start(0xD1);    /* I2C start with device read address */
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0003 0027 }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;void Read_RawValue()
; 0003 002A {
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0003 002B MPU_Start_Loc();            /* Read Gyro values */
;PCODE: $00000043 VOL: 0
; 0003 002C Acc_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0003 002D Acc_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0003 002E Acc_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0003 002F Temperature = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0003 0030 Gyro_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0003 0031 Gyro_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0003 0032 Gyro_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Nack());
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0003 0033 I2C_Stop();
;PCODE: $0000008A VOL: 0
; 0003 0034 }
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
